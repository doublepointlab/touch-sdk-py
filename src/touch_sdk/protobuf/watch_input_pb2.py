# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: watch_input.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import touch_sdk.protobuf.common_pb2 as common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11watch_input.proto\x1a\x0c\x63ommon.proto\"~\n\x0bHapticEvent\x12%\n\x04type\x18\x01 \x01(\x0e\x32\x17.HapticEvent.HapticType\x12\x11\n\tintensity\x18\x02 \x01(\x02\x12\x0e\n\x06length\x18\x03 \x01(\x05\"%\n\nHapticType\x12\n\n\x06\x43\x41NCEL\x10\x00\x12\x0b\n\x07ONESHOT\x10\x01\"L\n\nClientInfo\x12\x0f\n\x07\x61ppName\x18\x01 \x01(\t\x12\x12\n\ndeviceName\x18\x02 \x01(\t\x12\r\n\x05title\x18\x03 \x01(\t\x12\n\n\x02os\x18\x04 \x01(\t\"o\n\x0bInputUpdate\x12!\n\x0bhapticEvent\x18\x01 \x01(\x0b\x32\x0c.HapticEvent\x12\x1f\n\nclientInfo\x18\x02 \x01(\x0b\x32\x0b.ClientInfo\x12\x1c\n\x0cmodelRequest\x18\x03 \x01(\x0b\x32\x06.ModelB\r\xaa\x02\nPsix.Protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'watch_input_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\252\002\nPsix.Proto'
  _globals['_HAPTICEVENT']._serialized_start=35
  _globals['_HAPTICEVENT']._serialized_end=161
  _globals['_HAPTICEVENT_HAPTICTYPE']._serialized_start=124
  _globals['_HAPTICEVENT_HAPTICTYPE']._serialized_end=161
  _globals['_CLIENTINFO']._serialized_start=163
  _globals['_CLIENTINFO']._serialized_end=239
  _globals['_INPUTUPDATE']._serialized_start=241
  _globals['_INPUTUPDATE']._serialized_end=352
# @@protoc_insertion_point(module_scope)
